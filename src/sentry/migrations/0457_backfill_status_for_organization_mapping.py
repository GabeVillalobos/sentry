# Generated by Django 2.2.28 on 2023-05-22 18:27

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def backfill_status_for_organizationmember(apps, schema_editor):
    Organization = apps.get_model("sentry", "Organization")
    OrganizationMapping = apps.get_model("sentry", "OrganizationMapping")
    for org_mapping in RangeQuerySetWrapperWithProgressBar(
        OrganizationMapping.objects.filter(status__isnull=True)
    ):
        organization = None
        try:
            organization = Organization.objects.filter(id=org_mapping.organization_id).get()
        except Organization.DoesNotExist:
            organization = None

        if organization is not None:
            org_mapping.status = organization.status
            org_mapping.save(update_fields=["status"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0456_add_organization_status_to_org_mapping"),
    ]

    operations = [
        migrations.RunPython(
            backfill_status_for_organizationmember,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_organizationmapping", "sentry_organization"]},
        ),
    ]
